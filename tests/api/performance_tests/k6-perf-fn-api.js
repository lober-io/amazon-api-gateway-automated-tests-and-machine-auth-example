// Auto-generated by the postman-to-k6 converter

import "../libs/shim/core.js";
import "../libs/shim/urijs.js";
import "../libs/shim/expect.js";
import { group } from "k6";

export let options = { maxRedirects: 4 };

const Pre = Symbol.for("pre");
const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    base_url: "https://lhqf8g5iri.execute-api.eu-central-1.amazonaws.com/prod",
    backend: "fn",
    book_id: "",
    book_ids: "[]",
    counter: "0",
    book_id_to_delete: "",
    book_ids_to_delete: ""
  }
});

export function deleteBook(bookId) {
  group('Delete Book', function () {
    postman[Request]({
      name: "07 - Delete created Book",
      id: "dc8bffd4-df54-472d-8d6d-af55e105a6c1",
      method: "DELETE",
      address: `{{base_url}}/{{backend}}/books/${bookId}`
    });

  });
}


export default function() {
  group("02 - DynamoDB", function() {
    postman[Pre].push(() => {
      pm.environment.set("backend", "fn");
    });

    postman[Request]({
      name: "01 - Get all Books",
      id: "a067f7fa-7003-4568-9cf2-e981fe2f1441",
      method: "GET",
      address: "{{base_url}}/{{backend}}/books"
    });

    postman[Request]({
      name: "02 - Get not existing Book",
      id: "5b74d3af-d291-4bd4-a86a-9ecddf67f389",
      method: "GET",
      address: "{{base_url}}/{{backend}}/books/123456789"
    });

    postman[Request]({
      name: "03 - Create a Book",
      id: "79dfd777-cad4-46a8-b91d-588e9bea79b5",
      method: "POST",
      address: "{{base_url}}/{{backend}}/books",
      data:
        '{\n    "book_title": "Example Book Title",\n    "book_desc": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Mattis nunc sed blandit libero volutpat sed cras ornare. Donec ultrices tincidunt arcu non sodales neque sodales ut etiam. Bibendum at varius vel pharetra vel. Eu volutpat odio facilisis mauris. Risus quis varius quam quisque id diam vel quam."\n}',
      post(response) {
        let jsonResponse = pm.response.json();

        pm.environment.set("book_id", jsonResponse.book_id);
      }
    });

    postman[Request]({
      name: "04 - Get new created Book",
      id: "1d5a8145-7693-4812-bb81-5e077951fb2e",
      method: "GET",
      address: "{{base_url}}/{{backend}}/books/{{book_id}}"
    });

    postman[Request]({
      name: "05 - Update Book",
      id: "07fb2e0c-167d-447f-9508-43920bff3553",
      method: "PUT",
      address: "{{base_url}}/{{backend}}/books/{{book_id}}",
      data:
        '{\n    "book_title": "Example Book Title - Changed",\n    "book_desc": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Mattis nunc sed blandit libero volutpat sed cras ornare. Donec ultrices tincidunt arcu non sodales neque sodales ut etiam. Bibendum at varius vel pharetra vel. Eu volutpat odio facilisis mauris. Risus quis varius quam quisque id diam vel quam. Mattis nunc sed blandit libero volutpat sed cras ornare. Donec ultrices tincidunt arcu non sodales neque sodales ut etiam. Bibendum at varius vel pharetra vel. Eu volutpat odio facilisis mauris. Risus quis varius quam quisque id diam vel quam."\n}'
    });

    postman[Request]({
      name: "06 - Get changed Book",
      id: "2a482a3c-6798-4e0d-8af9-fb1245fd955e",
      method: "GET",
      address: "{{base_url}}/{{backend}}/books/{{book_id}}"
    });

    postman[Request]({
      name: "07 - Delete created Book",
      id: "dc8bffd4-df54-472d-8d6d-af55e105a6c1",
      method: "DELETE",
      address: "{{base_url}}/{{backend}}/books/{{book_id}}"
    });

    postman[Request]({
      name: "08 - Create a Book",
      id: "74082216-f9e9-48c7-b3fd-ededad93c879",
      method: "POST",
      address: "{{base_url}}/{{backend}}/books",
      data:
        '{\n    "book_title": "Example Book Title",\n    "book_desc": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Mattis nunc sed blandit libero volutpat sed cras ornare. Donec ultrices tincidunt arcu non sodales neque sodales ut etiam. Bibendum at varius vel pharetra vel. Eu volutpat odio facilisis mauris. Risus quis varius quam quisque id diam vel quam."\n}',
      pre() {
        let counter = pm.environment.get("counter");

        if (counter >= 199) {
          console.log("Delete Books after 199 created");


          let book_ids = pm.environment.get("book_ids");
      
          if (book_ids == null) {
            book_ids = [];
          } else {
            book_ids = JSON.parse(book_ids);
          }
          while (book_ids.length) {
 
            let bookId = book_ids.pop();
            console.log("Delete Book: " + bookId);
            deleteBook(bookId);

          }
          pm.environment.set("book_ids", JSON.stringify(book_ids));
          pm.environment.set("counter", 0);
      
        }
      },
      post(response) {
        let jsonResponse = pm.response.json();

        pm.environment.set("book_id", jsonResponse.book_id);

        let counter = pm.environment.get("counter");
        let book_ids = pm.environment.get("book_ids");

        if (book_ids == null) {
          book_ids = [];
        } else {
          book_ids = JSON.parse(book_ids);
        }

        book_ids.push(jsonResponse.book_id);

        pm.environment.set("book_ids", JSON.stringify(book_ids));

        pm.environment.set("counter", counter + 1);
      }
    });

    postman[Request]({
      name: "09 - Get not existing Book",
      id: "3e5ed914-c548-4e8f-9485-bdafa8aaa03c",
      method: "GET",
      address: "{{base_url}}/{{backend}}/books/{{book_id}}"
    });

    postman[Pre].pop();
  });
}
